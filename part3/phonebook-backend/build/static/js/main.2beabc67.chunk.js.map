{"version":3,"sources":["services/phonebook.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseURL","phonebookService","getAll","axios","get","then","response","data","add","newObject","post","catch","error","Error","update","id","put","status","_delete","delete","Filter","filter","handleChange","value","onChange","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","handleDelete","map","person","name","number","onClick","Notification","notification","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","message","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","allPersons","notify","setTimeout","updatePerson","personToUpdate","window","confirm","updatedPerson","event","target","preventDefault","existingPerson","find","newPerson","returnedPerson","concat","p","toLowerCase","includes","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2beabc67.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseURL = `/api/persons`\n\nconst getAll = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst add = (newObject) => {\n    const request = axios.post(baseURL, newObject)\n    return request\n        .then(response => response.data)\n        .catch(error => {\n            throw new Error(error.response.data.error)\n        })\n}\n\nconst update = (update, id) => {\n    const request = axios.put(`${baseURL}/${id}`, update)\n    return request\n        .then(response => response.data)\n        .catch(error => {\n            if (error.response.status === 404) {\n                throw new Error('Not Found')\n            } else {\n                throw new Error(error.response.data.error)\n            }\n        })\n}\n\nconst _delete = (id) => {\n    return axios.delete(`${baseURL}/${id}`)\n}\n\nconst phonebookService = { getAll, add, update, _delete }\n\nexport default phonebookService","import React from \"react\";\n\nconst Filter = ({ filter, handleChange }) => (\n    <div>\n        filter shown with <input value={filter} onChange={handleChange} />\n    </div>\n)\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => (\n    <div>\n        <h3>Add a new</h3>\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n                <br />\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    </div>\n)\n\nexport default PersonForm","import React from \"react\";\n\nconst Persons = ({ persons, handleDelete }) => (\n    <div>\n        <h3>Numbers</h3>\n        {persons.map(person =>\n            <div key={person.id}>\n            <label>\n                {person.name} {person.number}\n            </label>\n            <button onClick={() => handleDelete(person)}>\n                delete\n            </button>\n            </div>\n         )}\n    </div>\n)\n\nexport default Persons","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n    if (notification === null) {\n        return null\n    }\n\n    const style = {\n        color: notification.color,\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n    return (\n        <div style={style}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","import React, {useEffect, useState} from 'react'\nimport phonebookService from \"./services/phonebook\"\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ notification, setNotification ] = useState(null)\n\n    useEffect(() => {\n        phonebookService.getAll().then(allPersons => {\n            setPersons(allPersons)\n        })\n    }, [])\n\n    const notify = (message, color) => {\n        setNotification({message, color})\n        setTimeout(() => {\n            setNotification(null)\n        }, 5000)\n    }\n    \n    const addPerson = (event) => {\n        event.preventDefault()\n        const existingPerson = persons.find(person => person.name === newName)\n        if (existingPerson) {\n            updatePerson(existingPerson)\n            return\n        }\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n        phonebookService.add(newPerson)\n            .then(returnedPerson => {\n                setPersons(persons.concat(returnedPerson))\n                notify(`Added ${newPerson.name}`, 'green')\n            })\n            .catch(error => {\n                notify(error.message, 'red')\n            })\n    }\n\n    const updatePerson = (personToUpdate) => {\n        if (!window.confirm(`update ${personToUpdate.name}'s number to ${newNumber}?`)) {\n            return\n        }\n        const update = { number: newNumber}\n        phonebookService.update(update, personToUpdate.id)\n            .then(updatedPerson => {\n                setPersons(persons.map(person => person.id !== personToUpdate.id ? person : updatedPerson))\n                notify(`Updated ${updatedPerson.name}`, 'green')\n            })\n            .catch(error => {\n                if (error.message === 'Not Found') {\n                    notify(`${personToUpdate.name} was already deleted from phonebook`, 'red')\n                    setPersons(persons.filter(person => person.id !== personToUpdate.id))\n                } else {\n                    notify(error.message, 'red')\n                }\n            })\n    }\n\n    const deletePerson =(personToDelete) => {\n        if (!window.confirm(`do you want to delete ${personToDelete.name} from phonebook?`)) {\n            return\n        }\n        phonebookService._delete(personToDelete.id).then(() => {\n        }).catch(() => {\n            notify(`${personToDelete.name} was already deleted from phonebook`, 'red')\n        })\n        setPersons(persons.filter(person => person.id !== personToDelete.id))\n    }\n\n    return (\n      <div>\n          <h2>Phonebook</h2>\n          <Notification notification={notification}/>\n          <Filter\n              filter={filter}\n              handleChange={(event) => setFilter(event.target.value)}\n          />\n          <PersonForm\n              addPerson={addPerson}\n              newName={newName}\n              newNumber={newNumber}\n              handleNameChange={(event) => setNewName(event.target.value)}\n              handleNumberChange={(event) => setNewNumber(event.target.value)}\n          />\n          <Persons\n              persons={persons.filter((p) => p.name.toLowerCase().includes(filter.toLowerCase()))}\n              handleDelete={deletePerson}\n          />\n      </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}